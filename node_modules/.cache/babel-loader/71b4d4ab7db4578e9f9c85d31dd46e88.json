{"ast":null,"code":"// File generated from our OpenAPI spec\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nconst stripeMethod = StripeResource.method;\nmodule.exports = StripeResource.extend({\n  path: 'customers',\n  create: stripeMethod({\n    method: 'POST',\n    path: ''\n  }),\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{customer}'\n  }),\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{customer}'\n  }),\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list'\n  }),\n  del: stripeMethod({\n    method: 'DELETE',\n    path: '/{customer}'\n  }),\n  createFundingInstructions: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/funding_instructions'\n  }),\n  deleteDiscount: stripeMethod({\n    method: 'DELETE',\n    path: '/{customer}/discount'\n  }),\n  listPaymentMethods: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/payment_methods',\n    methodType: 'list'\n  }),\n  search: stripeMethod({\n    method: 'GET',\n    path: '/search',\n    methodType: 'search'\n  }),\n  retrieveCashBalance: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/cash_balance'\n  }),\n  updateCashBalance: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/cash_balance'\n  }),\n  createBalanceTransaction: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/balance_transactions'\n  }),\n  retrieveBalanceTransaction: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/balance_transactions/{transaction}'\n  }),\n  updateBalanceTransaction: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/balance_transactions/{transaction}'\n  }),\n  listBalanceTransactions: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/balance_transactions',\n    methodType: 'list'\n  }),\n  createSource: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/sources'\n  }),\n  retrieveSource: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/sources/{id}'\n  }),\n  updateSource: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/sources/{id}'\n  }),\n  listSources: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/sources',\n    methodType: 'list'\n  }),\n  deleteSource: stripeMethod({\n    method: 'DELETE',\n    path: '/{customer}/sources/{id}'\n  }),\n  verifySource: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/sources/{id}/verify'\n  }),\n  createTaxId: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/tax_ids'\n  }),\n  retrieveTaxId: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/tax_ids/{id}'\n  }),\n  listTaxIds: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/tax_ids',\n    methodType: 'list'\n  }),\n  deleteTaxId: stripeMethod({\n    method: 'DELETE',\n    path: '/{customer}/tax_ids/{id}'\n  })\n});","map":{"version":3,"names":["StripeResource","require","stripeMethod","method","module","exports","extend","path","create","retrieve","update","list","methodType","del","createFundingInstructions","deleteDiscount","listPaymentMethods","search","retrieveCashBalance","updateCashBalance","createBalanceTransaction","retrieveBalanceTransaction","updateBalanceTransaction","listBalanceTransactions","createSource","retrieveSource","updateSource","listSources","deleteSource","verifySource","createTaxId","retrieveTaxId","listTaxIds","deleteTaxId"],"sources":["/Users/joris/Library/Mobile Documents/com~apple~CloudDocs/OneDrive v1/34. Projects/stripe-prebuilt/node_modules/stripe/lib/resources/Customers.js"],"sourcesContent":["// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'customers',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{customer}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '/{customer}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: '',\n    methodType: 'list',\n  }),\n\n  del: stripeMethod({\n    method: 'DELETE',\n    path: '/{customer}',\n  }),\n\n  createFundingInstructions: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/funding_instructions',\n  }),\n\n  deleteDiscount: stripeMethod({\n    method: 'DELETE',\n    path: '/{customer}/discount',\n  }),\n\n  listPaymentMethods: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/payment_methods',\n    methodType: 'list',\n  }),\n\n  search: stripeMethod({\n    method: 'GET',\n    path: '/search',\n    methodType: 'search',\n  }),\n\n  retrieveCashBalance: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/cash_balance',\n  }),\n\n  updateCashBalance: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/cash_balance',\n  }),\n\n  createBalanceTransaction: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/balance_transactions',\n  }),\n\n  retrieveBalanceTransaction: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/balance_transactions/{transaction}',\n  }),\n\n  updateBalanceTransaction: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/balance_transactions/{transaction}',\n  }),\n\n  listBalanceTransactions: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/balance_transactions',\n    methodType: 'list',\n  }),\n\n  createSource: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/sources',\n  }),\n\n  retrieveSource: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/sources/{id}',\n  }),\n\n  updateSource: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/sources/{id}',\n  }),\n\n  listSources: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/sources',\n    methodType: 'list',\n  }),\n\n  deleteSource: stripeMethod({\n    method: 'DELETE',\n    path: '/{customer}/sources/{id}',\n  }),\n\n  verifySource: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/sources/{id}/verify',\n  }),\n\n  createTaxId: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/tax_ids',\n  }),\n\n  retrieveTaxId: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/tax_ids/{id}',\n  }),\n\n  listTaxIds: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/tax_ids',\n    methodType: 'list',\n  }),\n\n  deleteTaxId: stripeMethod({\n    method: 'DELETE',\n    path: '/{customer}/tax_ids/{id}',\n  }),\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}